angular.module("itDebugTemplates",[]),angular.module("itDebugPanel",["itDebugTemplates"]).factory("RecursionHelper",["$compile",function(a){return{compile:function(b,c){angular.isFunction(c)&&(c={post:c});var d,e=b.contents().remove();return{pre:c&&c.pre?c.pre:null,post:function(b,f){d||(d=a(e)),d(b,function(a){f.append(a)}),c&&c.post&&c.post.apply(null,arguments)}}}}}]).directive("debugPanel",["$document",function(a){return{restrict:"E",scope:{options:"=",panelVisible:"=?"},templateUrl:"component/templates/debugPanel.tpl.html",link:function(b){a.bind("keydown",function(a){console.log(a),console.log(a.keyUp),68==a.keyCode&&a.shiftKey&&a.altKey&&(b.panelVisible=!b.panelVisible,b.$apply())})}}}]).directive("optionsForm",["RecursionHelper",function(a){return{restrict:"E",scope:{options:"="},templateUrl:"component/templates/optionsForm.tpl.html",compile:function(b){return a.compile(b,function(a){a.isObject=function(a){return angular.isObject(a)},a.getType=function(a){return angular.isArray(a)?"Array":angular.isObject(a)?"Object":angular.isNumber(a)?"Number":"boolean"==typeof a?"Boolean":"Default"}})}}}]).directive("myDraggable",["$document",function(a){return function(b,c){function d(a){i=a.pageY-g,h=a.pageX-f,c.css({top:i+"px",left:h+"px"})}function e(){a.off("mousemove",d),a.off("mouseup",e)}var f=0,g=0,h=0,i=0;c.css({position:"relative",border:"1px solid red",padding:"10px",cursor:"pointer"}),c.on("mousedown",function(b){b.preventDefault(),f=b.pageX-h,g=b.pageY-i,a.on("mousemove",d),a.on("mouseup",e)})}}]).directive("blockMouseDown",function(){return{restrict:"A",link:function(a,b){b.on("mousedown",function(a){a.stopImmediatePropagation()})}}}),angular.module("itDebugTemplates",["component/templates/debugPanel.tpl.html","component/templates/optionsForm.tpl.html"]),angular.module("component/templates/debugPanel.tpl.html",[]).run(["$templateCache",function(a){a.put("component/templates/debugPanel.tpl.html",'<div class="debugPanelWrapper" ng-show="panelVisible">\n  <div class="debugPanel panel panel-default" my-draggable>\n    <div class="panel-heading">\n      <span class="pull-right" ng-click="panelVisible=false">\n        <i class="glyphicon glyphicon-remove"></i>\n      </span>\n      <h3 class="panel-title">Debug Panel</h3>\n    </div>\n    <options-form options="options">\n    </options-form>\n  </div>\n</div>')}]),angular.module("component/templates/optionsForm.tpl.html",[]).run(["$templateCache",function(a){a.put("component/templates/optionsForm.tpl.html",'<div ng-show="getType(options) == \'Array\'">\n  <div ng-click="arrayVisible=!arrayVisible" class="elementRow" ng-class="{\'selected\':arrayVisible}">\n    Array\n  </div>\n</div>\n<div ng-show="getType(options) != \'Array\'||arrayVisible" ng-repeat="(key, value) in options track by $index" style="max-width:400px;">\n  <div ng-if="isObject(options[key])" class="well well-sm">\n    <div ng-click="visible=!visible" class="elementRow" ng-class="{\'selected\':visible}">Object: {{key}}</div>\n    <options-form ng-show="visible" options="options[key]">\n    </options-form>\n    <br/>\n  </div>\n  <div class="container-fluid" ng-if="getType(options[key])!=\'Array\'&&getType(options[key])!=\'Object\'">\n    <div class="row">\n      <div class="col-xs-8">\n        {{key}}:\n      </div>\n      <div ng-switch="getType(value)">\n        <input ng-switch-when="Boolean" block-mouse-down class="col-xs-4" type="checkbox" ng-model="options[key]">\n        <input ng-switch-when="Number" block-mouse-down class="col-xs-4" type="number" ng-model="options[key]">\n        <input ng-switch-default block-mouse-down class="col-xs-4" type="text" ng-model="options[key]">\n      </div>\n    </div>\n  </div>\n</div>')}]);